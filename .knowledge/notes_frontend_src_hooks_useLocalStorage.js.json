{"is_source_file": true, "format": "JavaScript", "description": "This file defines a React custom hook `useLocalStorage` that synchronizes React component state with the browser's localStorage, allowing for persistent state across page reloads and tabs.", "external_files": ["react"], "external_methods": ["useEffect", "useState"], "published": ["useLocalStorage"], "classes": [], "methods": [{"name": "useLocalStorage(key, initialValue)", "description": "A React hook that provides a stateful value synchronized with localStorage under the specified key. It initializes the state from localStorage if available, and updates localStorage on state changes, listening to storage events for cross-tab sync.", "scope": "", "scopeKind": ""}], "calls": ["window.localStorage.getItem", "window.localStorage.setItem", "JSON.parse", "JSON.stringify", "window.addEventListener", "window.removeEventListener"], "search-terms": ["useLocalStorage", "React hook", "localStorage sync", "cross-tab", "persistent state"], "state": 2, "file_id": 16, "knowledge_revision": 38, "git_revision": "43f7d9ae6823ed46befa97080b233bc9b2f72ddc", "ctags": [{"_type": "tag", "name": "useLocalStorage", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-182230-182239/notes_frontend/src/hooks/useLocalStorage.js", "pattern": "/^export function useLocalStorage(key, initialValue) {$/", "language": "JavaScript", "kind": "function", "signature": "(key, initialValue)"}], "hash": "b345c0951021685c8cdcbfc54a93d9a4", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/hooks/useLocalStorage.js", "revision_history": [{"38": "43f7d9ae6823ed46befa97080b233bc9b2f72ddc"}]}